[{"path":"https://bakeoff.netlify.app/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018-2022 Alison Hill Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bakeoff.netlify.app/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alison Hill. Author, maintainer, copyright holder. Chester Ismay. Author. Richard Iannone. Author.","code":""},{"path":"https://bakeoff.netlify.app/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hill , Ismay C, Iannone R (2022). bakeoff: Data \"Great British Bake \". https://bakeoff.netlify.app/, https://github.com/apreshill/bakeoff.","code":"@Manual{,   title = {bakeoff: Data from \"The Great British Bake Off\"},   author = {Alison Hill and Chester Ismay and Richard Iannone},   year = {2022},   note = {https://bakeoff.netlify.app/, https://github.com/apreshill/bakeoff}, }"},{"path":"https://bakeoff.netlify.app/index.html","id":"bakeoff-","dir":"","previous_headings":"","what":"Data from ","title":"Data from ","text":"goal bakeoff enable data wrangling, analysis, visualizations using data “Great British Bake ”.","code":""},{"path":"https://bakeoff.netlify.app/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data from ","text":"can install development version bakeoff GitHub :","code":"remotes::install_github(\"apreshill/bakeoff\")"},{"path":"https://bakeoff.netlify.app/reference/bakeoff_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract named bakeoff colors as hex codes — bakeoff_colors","title":"Extract named bakeoff colors as hex codes — bakeoff_colors","text":"Get vector hexadecimal color codes, , extract subset colors using defined color names (available using names(bakeoff_colors())).","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract named bakeoff colors as hex codes — bakeoff_colors","text":"","code":"bakeoff_colors(...)"},{"path":"https://bakeoff.netlify.app/reference/bakeoff_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract named bakeoff colors as hex codes — bakeoff_colors","text":"... Character names bakeoff colors. none specified, returns . specified, can listed names quotes (need combine c()).","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract named bakeoff colors as hex codes — bakeoff_colors","text":"named character vector hex colors.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract named bakeoff colors as hex codes — bakeoff_colors","text":"","code":"bakeoff_colors() #>            rose           peach    garancemelon    garancepeach    desertflower  #>       \"#fdaba3\"       \"#edbba8\"       \"#f27168\"       \"#f7d2b1\"       \"#ff9a90\"  #>     tenderpeach     livingcoral   garanceyellow          yellow           lemon  #>       \"#f8d6b8\"       \"#fa7268\"       \"#fbed87\"       \"#fedb11\"       \"#e2bf54\"  #>     garancegold            gold garancemarigold        marigold          orange  #>       \"#b79f26\"       \"#9d8e42\"       \"#f4b31a\"       \"#ff7436\"       \"#f0a561\"  #>       tangerine   vibrantorange           berry       prismpink         magenta  #>       \"#ef8759\"       \"#ff6d2d\"       \"#ee5863\"       \"#efa5c8\"       \"#fb82b7\"  #>          violet      brightpink           flush             red          maroon  #>       \"#c6b7d5\"       \"#ed259d\"       \"#ca225e\"       \"#e74a2f\"       \"#5f1f29\"  #>        burgundy        cardinal            mint          garden           green  #>       \"#8e4866\"       \"#b92f3b\"       \"#deeee2\"       \"#629d62\"       \"#5b8c4d\"  #>          hunter            pear            pine           mason          baltic  #>       \"#284a29\"       \"#d3dcaa\"       \"#4c9a89\"       \"#98c0b8\"       \"#1a9a9d\"  #>      agategreen         riptide          marina            opal        bluegrey  #>       \"#5da19a\"       \"#84d6d3\"       \"#519199\"       \"#bdd9d4\"       \"#6999cd\"  #>          cobalt             sky   starlightblue      placidblue        bluebell  #>       \"#4254a7\"       \"#7f8cb4\"       \"#b5d2dc\"       \"#8daed7\"       \"#8d91c9\"  #>         matisse      brightnavy        deepblue     garanceblue    bluesapphire  #>       \"#187ba2\"       \"#2f77c1\"       \"#343c56\"       \"#283338\"       \"#126180\"  #>            blue           brick          almond        charcoal           cocoa  #>       \"#1c5c6e\"       \"#bc643a\"       \"#543f29\"       \"#313131\"       \"#a5774c\"  #>    garanceblack     garancegrey    garancewhite            grey            nude  #>       \"#1a1917\"       \"#a09e9f\"       \"#efede8\"       \"#95918d\"       \"#fdd9b9\"  #>           white           linen         tobacco  #>       \"#f0eee9\"       \"#f0d8c3\"       \"#9a7c37\"  bakeoff_colors(\"riptide\") #>   riptide  #> \"#84d6d3\"  bakeoff_colors(\"baltic\", \"yellow\") #>    baltic    yellow  #> \"#1a9a9d\" \"#fedb11\"  names(bakeoff_colors()) #>  [1] \"rose\"            \"peach\"           \"garancemelon\"    \"garancepeach\"    #>  [5] \"desertflower\"    \"tenderpeach\"     \"livingcoral\"     \"garanceyellow\"   #>  [9] \"yellow\"          \"lemon\"           \"garancegold\"     \"gold\"            #> [13] \"garancemarigold\" \"marigold\"        \"orange\"          \"tangerine\"       #> [17] \"vibrantorange\"   \"berry\"           \"prismpink\"       \"magenta\"         #> [21] \"violet\"          \"brightpink\"      \"flush\"           \"red\"             #> [25] \"maroon\"          \"burgundy\"        \"cardinal\"        \"mint\"            #> [29] \"garden\"          \"green\"           \"hunter\"          \"pear\"            #> [33] \"pine\"            \"mason\"           \"baltic\"          \"agategreen\"      #> [37] \"riptide\"         \"marina\"          \"opal\"            \"bluegrey\"        #> [41] \"cobalt\"          \"sky\"             \"starlightblue\"   \"placidblue\"      #> [45] \"bluebell\"        \"matisse\"         \"brightnavy\"      \"deepblue\"        #> [49] \"garanceblue\"     \"bluesapphire\"    \"blue\"            \"brick\"           #> [53] \"almond\"          \"charcoal\"        \"cocoa\"           \"garanceblack\"    #> [57] \"garancegrey\"     \"garancewhite\"    \"grey\"            \"nude\"            #> [61] \"white\"           \"linen\"           \"tobacco\"          if (require('scales')) {   scales::show_col(bakeoff_colors(), label = FALSE) } #> Loading required package: scales"},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"A bakeoff palette generator — bakeoff_palette","title":"A bakeoff palette generator — bakeoff_palette","text":"bakeoff palette generator","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A bakeoff palette generator — bakeoff_palette","text":"","code":"bakeoff_palette(   palette = \"showstopper\",   n,   direction = 1,   type = c(\"discrete\", \"continuous\") )"},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A bakeoff palette generator — bakeoff_palette","text":"palette Name desired palette. Can either \"showstopper\" (default), \"signature\", \"finale\" (accessible bakeoff_palette_names()). n Number colors desired. palettes 10 colors, matching total number series maximum number episodes per series. omitted, bakeoff uses colors. direction Either 1 -1. -1, palette reversed. type Either \"continuous\" \"discrete\". Use continuous want automatically interpolate colors.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A bakeoff palette generator — bakeoff_palette","text":"vector colors.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A bakeoff palette generator — bakeoff_palette","text":"","code":"bakeoff_palette(\"showstopper\")   if (require('scales')) {   show_col(bakeoff_palette(\"finale\"))  }  if (require('ggplot2')) { line_plot <- ggplot(ratings, aes(x = episode, y = viewers_7day, color = as.factor(series), group = series)) + facet_wrap(~series) + geom_line(lwd = 2) line_plot + scale_color_manual(values = bakeoff_palette(), guide = \"none\")  ggplot(episodes, aes(episode, bakers_appeared, fill = as.factor(series))) + geom_col() + facet_wrap(~series) + scale_fill_manual(values = bakeoff_palette(\"signature\"), guide = \"none\") + scale_x_continuous(breaks = scales::pretty_breaks()) } #> Loading required package: ggplot2    # If you need more colors than normally found in a palette, you # can use a continuous palette to interpolate between existing # colours pal <- bakeoff_palette(palette = \"finale\", n = 20, type = \"continuous\") if (require('scales')) { show_col(pal) }"},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Print names of all bakeoff color palettes — bakeoff_palette_names","title":"Print names of all bakeoff color palettes — bakeoff_palette_names","text":"Print names bakeoff color palettes","code":""},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print names of all bakeoff color palettes — bakeoff_palette_names","text":"","code":"bakeoff_palette_names()"},{"path":"https://bakeoff.netlify.app/reference/bakeoff_palette_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print names of all bakeoff color palettes — bakeoff_palette_names","text":"","code":"bakeoff_palette_names() #> [1] \"showstopper\" \"signature\"   \"finale\""},{"path":"https://bakeoff.netlify.app/reference/bakers.html","id":null,"dir":"Reference","previous_headings":"","what":"Bakers — bakers","title":"Bakers — bakers","text":"Information baker performance series appeared .","code":""},{"path":"https://bakeoff.netlify.app/reference/bakers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bakers — bakers","text":"","code":"bakers"},{"path":"https://bakeoff.netlify.app/reference/bakers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bakers — bakers","text":"data frame 95 rows representing individual bakers 24 variables: series integer denoting UK series (1-10). baker_full character string giving full name. baker character string giving given nickname. age integer denoting age years first episode appeared. occupation character string giving occupation. hometown character string giving hometown. baker_last character string giving family name. baker_first character string giving given name. star_baker integer denoting number times given baker won Star Baker. technical_winner integer denoting number times given baker won first place technical challenge. technical_top3 integer denoting number times given baker top 3 (1st, 2nd, 3rd) technical challenge. technical_bottom integer denoting number times given baker bottom 3 technical challenge. technical_highest integer denoting best technical rank earned given baker across episodes appeared (higher better). technical_lowest integer denoting worst technical rank earned given baker across episodes appeared (higher better). technical_median integer denoting median technical rank earned given baker across episodes appeared (higher better). series_winner integer. 0 series winner, 1 series winner. series_runner_up integer. 0 runner-, 1 runner-. total_episodes_appeared integer denoting total number episodes given baker appeared. first_date_appeared date denoting original airdate first episode given baker appeared (equivalent series premiere episode UK.) last_date_appeared date denoting original airdate last episode given baker appeared (UK). first_date_us date denoting original airdate first episode given baker appeared (equivalent series premiere episode US). last_date_us date denoting original airdate last episode given baker appeared (US). percent_episodes_appeared percentage denoting number episodes given series/season given baker appeared episodes aired series/season. percent_technical_top3 percentage denoting number episodes given baker placed top 3 technical challenge, number total episodes baker appeared .","code":""},{"path":"https://bakeoff.netlify.app/reference/bakers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bakers — bakers","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off_(series_1)#The_Bakers, example, Series 1 bakers.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bakers — bakers","text":"","code":"if (require('tibble')) {   bakers  } #> Loading required package: tibble #> # A tibble: 120 × 24 #>    series baker     star_baker technical_winner technical_top3 technical_bottom #>     <dbl> <chr>          <int>            <int>          <int>            <int> #>  1      1 Annetha            0                0              1                1 #>  2      1 David              0                0              1                3 #>  3      1 Edd                0                2              4                1 #>  4      1 Jasminder          0                0              2                2 #>  5      1 Jonathan           0                1              1                2 #>  6      1 Lea                0                0              0                1 #>  7      1 Louise             0                0              0                1 #>  8      1 Mark               0                0              0                0 #>  9      1 Miranda            0                2              4                1 #> 10      1 Ruth               0                0              2                2 #> # … with 110 more rows, and 18 more variables: technical_highest <dbl>, #> #   technical_lowest <dbl>, technical_median <dbl>, series_winner <int>, #> #   series_runner_up <int>, total_episodes_appeared <dbl>, #> #   first_date_appeared <date>, last_date_appeared <date>, #> #   first_date_us <date>, last_date_us <date>, percent_episodes_appeared <dbl>, #> #   percent_technical_top3 <dbl>, baker_full <chr>, age <dbl>, #> #   occupation <chr>, hometown <chr>, baker_last <chr>, baker_first <chr> head(bakers) #> # A tibble: 6 × 24 #>   series baker     star_baker technical_winner technical_top3 technical_bottom #>    <dbl> <chr>          <int>            <int>          <int>            <int> #> 1      1 Annetha            0                0              1                1 #> 2      1 David              0                0              1                3 #> 3      1 Edd                0                2              4                1 #> 4      1 Jasminder          0                0              2                2 #> 5      1 Jonathan           0                1              1                2 #> 6      1 Lea                0                0              0                1 #> # … with 18 more variables: technical_highest <dbl>, technical_lowest <dbl>, #> #   technical_median <dbl>, series_winner <int>, series_runner_up <int>, #> #   total_episodes_appeared <dbl>, first_date_appeared <date>, #> #   last_date_appeared <date>, first_date_us <date>, last_date_us <date>, #> #   percent_episodes_appeared <dbl>, percent_technical_top3 <dbl>, #> #   baker_full <chr>, age <dbl>, occupation <chr>, hometown <chr>, #> #   baker_last <chr>, baker_first <chr>"},{"path":"https://bakeoff.netlify.app/reference/bakers_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Bakers (raw) — bakers_raw","title":"Bakers (raw) — bakers_raw","text":"Information baker appeared show.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakers_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bakers (raw) — bakers_raw","text":"","code":"bakers_raw"},{"path":"https://bakeoff.netlify.app/reference/bakers_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bakers (raw) — bakers_raw","text":"data frame 120 rows representing individual bakers 8 variables: series factor denoting UK series (1-10). baker_full character string giving full name. baker character string given name nickname. age integer denoting age years first episode appeared. occupation character string giving occupation. hometown character string giving hometown. baker_last character string giving family name. baker_first character string giving given name.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakers_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bakers (raw) — bakers_raw","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off_(series_1)#The_Bakers, example, series 1 bakers.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakers_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bakers (raw) — bakers_raw","text":"","code":"if (require('tibble')) {   bakers_raw  } #> # A tibble: 120 × 8 #>    series baker_full      baker   age occupation hometown baker_last baker_first #>    <fct>  <chr>           <chr> <dbl> <chr>      <chr>    <chr>      <chr>       #>  1 1      \"Annetha Mills\" Anne…    30 Midwife    Essex    Mills      Annetha     #>  2 1      \"David Chamber… David    31 Entrepren… Milton … Chambers   David       #>  3 1      \"Edward \\\"Edd\\… Edd      24 Debt coll… Bradford Kimber     Edward      #>  4 1      \"Jasminder Ran… Jasm…    45 Assistant… Birming… Randhawa   Jasminder   #>  5 1      \"Jonathan Shep… Jona…    25 Research … St Alba… Shepherd   Jonathan    #>  6 1      \"Lea Harris\"    Lea      51 Retired    Midloth… Harris     Lea         #>  7 1      \"Louise Brimel… Loui…    44 Police Of… Manches… Brimelow   Louise      #>  8 1      \"Mark Whithers\" Mark     48 Bus Driver South W… Whithers   Mark        #>  9 1      \"Miranda Gore … Mira…    37 Food buye… Midhurs… Browne     Miranda     #> 10 1      \"Ruth Clemens\"  Ruth     31 Retail ma… Poynton… Clemens    Ruth        #> # … with 110 more rows head(bakers_raw) #> # A tibble: 6 × 8 #>   series baker_full       baker   age occupation hometown baker_last baker_first #>   <fct>  <chr>            <chr> <dbl> <chr>      <chr>    <chr>      <chr>       #> 1 1      \"Annetha Mills\"  Anne…    30 Midwife    Essex    Mills      Annetha     #> 2 1      \"David Chambers\" David    31 Entrepren… Milton … Chambers   David       #> 3 1      \"Edward \\\"Edd\\\"… Edd      24 Debt coll… Bradford Kimber     Edward      #> 4 1      \"Jasminder Rand… Jasm…    45 Assistant… Birming… Randhawa   Jasminder   #> 5 1      \"Jonathan Sheph… Jona…    25 Research … St Alba… Shepherd   Jonathan    #> 6 1      \"Lea Harris\"     Lea      51 Retired    Midloth… Harris     Lea"},{"path":"https://bakeoff.netlify.app/reference/bakes_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Bakes (raw) — bakes_raw","title":"Bakes (raw) — bakes_raw","text":"Bakes signature showstopper challenges baker across 10 GBBO series.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakes_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bakes (raw) — bakes_raw","text":"","code":"bakes_raw"},{"path":"https://bakeoff.netlify.app/reference/bakes_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bakes (raw) — bakes_raw","text":"data frame 548 rows representing individual signatures showstoppers baker 6 variables: series integer denoting UK series (1-10). episode integer denoting episode number within series. baker character string given name nickname. signature character string containing bake signature challenge baker/episode. technical integer denoting rank technical challenge baker/episode. value 1 means baker winner technical challenge. NA, baker appear episode. showstopper character string containing bake showstopper challenge baker/episode.","code":""},{"path":"https://bakeoff.netlify.app/reference/bakes_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bakes (raw) — bakes_raw","text":"","code":"if (require('tibble')) {   bakes_raw  } #> # A tibble: 548 × 6 #>    series episode baker     signature                      technical showstopper #>     <int>   <int> <chr>     <chr>                              <int> <chr>       #>  1      1       1 Annetha   \"Light Jamaican Black Cakewit…         2 Red, White… #>  2      1       1 David     \"Chocolate Orange Cake\"                3 Black Fore… #>  3      1       1 Edd       \"Caramel Cinnamon and Banana …         1 N/A         #>  4      1       1 Jasminder \"Fresh Mango and Passion Frui…        NA N/A         #>  5      1       1 Jonathan  \"Carrot Cake with Lime and Cr…         9 Three Tier… #>  6      1       1 Lea       \"Cranberry and Pistachio Cake…        10 Raspberrie… #>  7      1       1 Louise    \"Carrot and Orange Cake\"              NA Never Fail… #>  8      1       1 Mark      \"Sticky Marmalade Tea Loaf\"           NA Heart-shap… #>  9      1       1 Miranda   \"Triple Layered Brownie Merin…         8 Three Tier… #> 10      1       1 Ruth      \"Three Tiered Lemon Drizzle C…        NA Classic Ch… #> # … with 538 more rows head(bakes_raw) #> # A tibble: 6 × 6 #>   series episode baker     signature                       technical showstopper #>    <int>   <int> <chr>     <chr>                               <int> <chr>       #> 1      1       1 Annetha   Light Jamaican Black Cakewith …         2 Red, White… #> 2      1       1 David     Chocolate Orange Cake                   3 Black Fore… #> 3      1       1 Edd       Caramel Cinnamon and Banana Ca…         1 N/A         #> 4      1       1 Jasminder Fresh Mango and Passion Fruit …        NA N/A         #> 5      1       1 Jonathan  Carrot Cake with Lime and Crea…         9 Three Tier… #> 6      1       1 Lea       Cranberry and Pistachio Cakewi…        10 Raspberrie…"},{"path":"https://bakeoff.netlify.app/reference/challenges.html","id":null,"dir":"Reference","previous_headings":"","what":"Challenges — challenges","title":"Challenges — challenges","text":"Details three challenges (\"signature\", \"technical\", \"showstopper\") baker/episode across GBBO series. eliminated? won star baker? finale, won runner ?","code":""},{"path":"https://bakeoff.netlify.app/reference/challenges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Challenges — challenges","text":"","code":"challenges"},{"path":"https://bakeoff.netlify.app/reference/challenges.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Challenges — challenges","text":"data frame 886 rows representing individual bakers per episode 7 variables: series integer denoting UK series number (1-8). episode integer denoting episode number within series. baker character string given name nickname. result character string denoting baker , , STAR BAKER, SICK given episode. finale episodes, values either WINNER Runner-. NA, baker appear episode. signature character string containing bake signature challenge baker/episode. NA, baker appear episode. technical integer denoting rank technical challenge baker/episode. value 1 means baker winner technical challenge. NA, baker appear episode. showstopper character string containing bake showstopper challenge baker/episode. NA, baker appear episode.","code":""},{"path":"https://bakeoff.netlify.app/reference/challenges.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Challenges — challenges","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off#Format","code":""},{"path":"https://bakeoff.netlify.app/reference/challenges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Challenges — challenges","text":"","code":"if (require('tibble')) {   challenges  } #> # A tibble: 1,136 × 7 #>    series episode baker     result signature               technical showstopper #>     <int>   <int> <chr>     <chr>  <chr>                       <int> <chr>       #>  1      1       1 Annetha   IN     \"Light Jamaican Black …         2 Red, White… #>  2      1       1 David     IN     \"Chocolate Orange Cake\"         3 Black Fore… #>  3      1       1 Edd       IN     \"Caramel Cinnamon and …         1 NA          #>  4      1       1 Jasminder IN     \"Fresh Mango and Passi…        NA NA          #>  5      1       1 Jonathan  IN     \"Carrot Cake with Lime…         9 Three Tier… #>  6      1       1 Louise    IN     \"Carrot and Orange Cak…        NA Never Fail… #>  7      1       1 Miranda   IN     \"Triple Layered Browni…         8 Three Tier… #>  8      1       1 Ruth      IN     \"Three Tiered Lemon Dr…        NA Classic Ch… #>  9      1       1 Lea       OUT    \"Cranberry and Pistach…        10 Raspberrie… #> 10      1       1 Mark      OUT    \"Sticky Marmalade Tea …        NA Heart-shap… #> # … with 1,126 more rows head(challenges) #> # A tibble: 6 × 7 #>   series episode baker     result signature                technical showstopper #>    <int>   <int> <chr>     <chr>  <chr>                        <int> <chr>       #> 1      1       1 Annetha   IN     Light Jamaican Black Ca…         2 Red, White… #> 2      1       1 David     IN     Chocolate Orange Cake            3 Black Fore… #> 3      1       1 Edd       IN     Caramel Cinnamon and Ba…         1 NA          #> 4      1       1 Jasminder IN     Fresh Mango and Passion…        NA NA          #> 5      1       1 Jonathan  IN     Carrot Cake with Lime a…         9 Three Tier… #> 6      1       1 Louise    IN     Carrot and Orange Cake          NA Never Fail…"},{"path":"https://bakeoff.netlify.app/reference/episodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Episodes — episodes","title":"Episodes — episodes","text":"episodes' statistics. dataset made collapsing challenges series episode.","code":""},{"path":"https://bakeoff.netlify.app/reference/episodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Episodes — episodes","text":"","code":"episodes"},{"path":"https://bakeoff.netlify.app/reference/episodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Episodes — episodes","text":"data frame 94 rows representing individual episodes per series 10 variables: series integer denoting UK series (1-10). episode integer denoting episode number within series. bakers_appeared integer denoting number bakers appeared given episode. bakers_out integer denoting number bakers either eliminated, left , left due illness episode. bakers_remaining integer denoting number bakers remained end given episode. star_bakers integer denoting number bakers crowned Star Baker given episode. technical_winners integer denoting number bakers placed first technical challenge. sb_name character string names bakers won Star Baker given episode, separated commas. winner_name character string name series winner. present final episodes within series. eliminated character string name bakers left given episode, separated commas.","code":""},{"path":"https://bakeoff.netlify.app/reference/episodes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Episodes — episodes","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off#Format","code":""},{"path":"https://bakeoff.netlify.app/reference/episodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Episodes — episodes","text":"","code":"if (require('tibble')) {   episodes  } #> # A tibble: 94 × 10 #>    series episode bakers_appeared bakers_out bakers_remaining star_bakers #>     <dbl>   <dbl>           <int>      <int>            <int>       <int> #>  1      1       1              10          2                8           0 #>  2      1       2               8          2                6           0 #>  3      1       3               6          1                5           0 #>  4      1       4               5          1                4           0 #>  5      1       5               4          1                3           0 #>  6      1       6               3          0                3           0 #>  7      2       1              12          1               11           1 #>  8      2       2              11          1               10           1 #>  9      2       3              10          2                8           1 #> 10      2       4               8          1                7           2 #> # … with 84 more rows, and 4 more variables: technical_winners <int>, #> #   sb_name <chr>, winner_name <chr>, eliminated <chr> head(episodes) #> # A tibble: 6 × 10 #>   series episode bakers_appeared bakers_out bakers_remaining star_bakers #>    <dbl>   <dbl>           <int>      <int>            <int>       <int> #> 1      1       1              10          2                8           0 #> 2      1       2               8          2                6           0 #> 3      1       3               6          1                5           0 #> 4      1       4               5          1                4           0 #> 5      1       5               4          1                3           0 #> 6      1       6               3          0                3           0 #> # … with 4 more variables: technical_winners <int>, sb_name <chr>, #> #   winner_name <chr>, eliminated <chr>"},{"path":"https://bakeoff.netlify.app/reference/episodes_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Each episodes' challenges (raw) — episodes_raw","title":"Each episodes' challenges (raw) — episodes_raw","text":"Details three challenges (signature, technical, showstopper) baker/episode across 10 GBBO series.","code":""},{"path":"https://bakeoff.netlify.app/reference/episodes_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Each episodes' challenges (raw) — episodes_raw","text":"","code":"episodes_raw"},{"path":"https://bakeoff.netlify.app/reference/episodes_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Each episodes' challenges (raw) — episodes_raw","text":"data frame 704 rows representing individual bakers per episode 6 variables: series factor denoting UK series (1-10). episode factor denoting episode number within series. baker character string giving given nickname. signature character string containing bake signature challenge baker/episode. technical integer denoting rank technical challenge baker/episode. rank 1 winner technical challenge. showstopper character string containing bake showstopper challenge baker/episode.","code":""},{"path":"https://bakeoff.netlify.app/reference/episodes_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Each episodes' challenges (raw) — episodes_raw","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off#Format","code":""},{"path":"https://bakeoff.netlify.app/reference/episodes_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Each episodes' challenges (raw) — episodes_raw","text":"","code":"if (require('tibble')) {   episodes_raw  } #> # A tibble: 704 × 6 #>    series episode baker     signature                      technical showstopper #>    <fct>  <fct>   <chr>     <chr>                              <int> <chr>       #>  1 1      1       Annetha   \"Light Jamaican Black Cakewit…         2 Red, White… #>  2 1      1       David     \"Chocolate Orange Cake\"                3 Black Fore… #>  3 1      1       Edd       \"Caramel Cinnamon and Banana …         1 NA          #>  4 1      1       Jasminder \"Fresh Mango and Passion Frui…        NA NA          #>  5 1      1       Jonathan  \"Carrot Cake with Lime and Cr…         9 Three Tier… #>  6 1      1       Lea       \"Cranberry and Pistachio Cake…        10 Raspberrie… #>  7 1      1       Louise    \"Carrot and Orange Cake\"              NA Never Fail… #>  8 1      1       Mark      \"Sticky Marmalade Tea Loaf\"           NA Heart-shap… #>  9 1      1       Miranda   \"Triple Layered Brownie Merin…         8 Three Tier… #> 10 1      1       Ruth      \"Three Tiered Lemon Drizzle C…        NA Classic Ch… #> # … with 694 more rows head(episodes_raw) #> # A tibble: 6 × 6 #>   series episode baker     signature                       technical showstopper #>   <fct>  <fct>   <chr>     <chr>                               <int> <chr>       #> 1 1      1       Annetha   Light Jamaican Black Cakewith …         2 Red, White… #> 2 1      1       David     Chocolate Orange Cake                   3 Black Fore… #> 3 1      1       Edd       Caramel Cinnamon and Banana Ca…         1 NA          #> 4 1      1       Jasminder Fresh Mango and Passion Fruit …        NA NA          #> 5 1      1       Jonathan  Carrot Cake with Lime and Crea…         9 Three Tier… #> 6 1      1       Lea       Cranberry and Pistachio Cakewi…        10 Raspberrie…"},{"path":"https://bakeoff.netlify.app/reference/ratings.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratings — ratings","title":"Ratings — ratings","text":"episode's ratings plus original airdates UK (series) US (season). dataset made joining ratings_raw seasons_raw datasets series episode.","code":""},{"path":"https://bakeoff.netlify.app/reference/ratings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratings — ratings","text":"","code":"ratings"},{"path":"https://bakeoff.netlify.app/reference/ratings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ratings — ratings","text":"data frame 74 rows representing individual episodes 10 variables: series integer denoting UK series (1-8). episode integer denoting episode number within series. uk_airdate date denoting original airdate episode UK. viewers_7day number viewers millions within 7-day window airdate. viewers_28day number viewers millions within 28-day window airdate. network_rank integer denoting episode's weekly ranking within network (note networks changed series 8 later). channels_rank integer denoting episode's weekly ranking across channels. bbc_iplayer_requests Number BBC iPlayer requests (note: available series, series aired BBC). us_season integer denoting US season (1-5). us_airdate date denoting original airdate episode US, according pbs.org.","code":""},{"path":"https://bakeoff.netlify.app/reference/ratings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ratings — ratings","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off_(series_1)#Ratings","code":""},{"path":"https://bakeoff.netlify.app/reference/ratings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratings — ratings","text":"","code":"if (require('tibble')) {   ratings  } #> # A tibble: 74 × 10 #>    series episode uk_airdate viewers_7day viewers_28day network_rank #>     <int>   <int> <date>            <dbl>         <dbl>        <int> #>  1      1       1 2010-08-17         2.24             7           NA #>  2      1       2 2010-08-24         3                3           NA #>  3      1       3 2010-08-31         3                2           NA #>  4      1       4 2010-09-07         2.6              4           NA #>  5      1       5 2010-09-14         3.03             1           NA #>  6      1       6 2010-09-21         2.75             1           NA #>  7      2       1 2011-08-16         3.1              2           NA #>  8      2       2 2011-08-23         3.53             2           NA #>  9      2       3 2011-08-30         3.82             1           NA #> 10      2       4 2011-09-06         3.6              1           NA #> # … with 64 more rows, and 4 more variables: channels_rank <int>, #> #   bbc_iplayer_requests <dbl>, us_season <int>, us_airdate <date> head(ratings) #> # A tibble: 6 × 10 #>   series episode uk_airdate viewers_7day viewers_28day network_rank #>    <int>   <int> <date>            <dbl>         <dbl>        <int> #> 1      1       1 2010-08-17         2.24             7           NA #> 2      1       2 2010-08-24         3                3           NA #> 3      1       3 2010-08-31         3                2           NA #> 4      1       4 2010-09-07         2.6              4           NA #> 5      1       5 2010-09-14         3.03             1           NA #> 6      1       6 2010-09-21         2.75             1           NA #> # … with 4 more variables: channels_rank <int>, bbc_iplayer_requests <dbl>, #> #   us_season <int>, us_airdate <date>"},{"path":"https://bakeoff.netlify.app/reference/ratings_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Each episode's ratings (raw) — ratings_raw","title":"Each episode's ratings (raw) — ratings_raw","text":"Ratings episodes across 10 GBBO series.","code":""},{"path":"https://bakeoff.netlify.app/reference/ratings_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Each episode's ratings (raw) — ratings_raw","text":"","code":"ratings_raw"},{"path":"https://bakeoff.netlify.app/reference/ratings_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Each episode's ratings (raw) — ratings_raw","text":"data frame 94 rows representing individual episodes 10 variables: series factor denoting UK series (1-10). episode factor denoting episode number within series. uk_airdate date denoting original airdate episode UK. viewers_7day number viewers millions within 7-day window airdate. viewers_28day number viewers millions within 28-day window airdate. network_rank integer denoting episode's weekly ranking within network (note networks changed series 8 later). channels_rank integer denoting episode's weekly ranking across channels. bbc_iplayer_requests number BBC iPlayer requests (note: available series, series aired BBC). episode_count continuous episode count.","code":""},{"path":"https://bakeoff.netlify.app/reference/ratings_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Each episode's ratings (raw) — ratings_raw","text":"official episode viewer number BARB, entered Wikipedia https://en.wikipedia.org/wiki/The_Great_British_Bake_Off","code":""},{"path":"https://bakeoff.netlify.app/reference/ratings_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Each episode's ratings (raw) — ratings_raw","text":"","code":"if (require('tibble')) {   ratings_raw  } #> # A tibble: 94 × 9 #>    series episode uk_airdate viewers_7day viewers_28day network_rank #>    <fct>  <fct>   <date>            <dbl>         <dbl>        <int> #>  1 1      1       2010-08-17         2.24             7           NA #>  2 1      2       2010-08-24         3                3           NA #>  3 1      3       2010-08-31         3                2           NA #>  4 1      4       2010-09-07         2.6              4           NA #>  5 1      5       2010-09-14         3.03             1           NA #>  6 1      6       2010-09-21         2.75             1           NA #>  7 2      1       2011-08-16         3.1              2           NA #>  8 2      2       2011-08-23         3.53             2           NA #>  9 2      3       2011-08-30         3.82             1           NA #> 10 2      4       2011-09-06         3.6              1           NA #> # … with 84 more rows, and 3 more variables: channels_rank <int>, #> #   bbc_iplayer_requests <dbl>, episode_count <dbl> head(ratings_raw) #> # A tibble: 6 × 9 #>   series episode uk_airdate viewers_7day viewers_28day network_rank #>   <fct>  <fct>   <date>            <dbl>         <dbl>        <int> #> 1 1      1       2010-08-17         2.24             7           NA #> 2 1      2       2010-08-24         3                3           NA #> 3 1      3       2010-08-31         3                2           NA #> 4 1      4       2010-09-07         2.6              4           NA #> 5 1      5       2010-09-14         3.03             1           NA #> 6 1      6       2010-09-21         2.75             1           NA #> # … with 3 more variables: channels_rank <int>, bbc_iplayer_requests <dbl>, #> #   episode_count <dbl>"},{"path":"https://bakeoff.netlify.app/reference/results_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Each baker's results by episode (raw) — results_raw","title":"Each baker's results by episode (raw) — results_raw","text":"Results episode per baker across 10 GBBO series.","code":""},{"path":"https://bakeoff.netlify.app/reference/results_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Each baker's results by episode (raw) — results_raw","text":"","code":"results_raw"},{"path":"https://bakeoff.netlify.app/reference/results_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Each baker's results by episode (raw) — results_raw","text":"data frame 1,136 rows representing individual bakers per episode 4 variables: series factor denoting UK series (1-10) episode factor denoting episode number within series baker character string giving given nickname (note: see bakers full baker names) result factor denoting baker \"\", \"\", \"STAR BAKER\", \"SICK\" given episode. finale episodes, values either \"WINNER\" \"RUNNER-\". NA, baker appear episode.","code":""},{"path":"https://bakeoff.netlify.app/reference/results_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Each baker's results by episode (raw) — results_raw","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off_(series_1)#Results_summary, example, series 1 results summary.","code":""},{"path":"https://bakeoff.netlify.app/reference/results_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Each baker's results by episode (raw) — results_raw","text":"","code":"if (require('tibble')) {   results_raw  } #> # A tibble: 1,136 × 4 #>    series episode baker   result #>    <fct>  <fct>   <chr>   <fct>  #>  1 1      1       Annetha IN     #>  2 1      2       Annetha OUT    #>  3 1      3       Annetha NA     #>  4 1      4       Annetha NA     #>  5 1      5       Annetha NA     #>  6 1      6       Annetha NA     #>  7 1      1       David   IN     #>  8 1      2       David   IN     #>  9 1      3       David   IN     #> 10 1      4       David   OUT    #> # … with 1,126 more rows"},{"path":"https://bakeoff.netlify.app/reference/scale_bakeoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Color scale constructor for bakeoff colors — scale_bakeoff","title":"Color scale constructor for bakeoff colors — scale_bakeoff","text":"Color scale constructor bakeoff colors","code":""},{"path":"https://bakeoff.netlify.app/reference/scale_bakeoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color scale constructor for bakeoff colors — scale_bakeoff","text":"","code":"scale_color_bakeoff(   palette = \"showstopper\",   discrete = TRUE,   direction = 1,   ... )  scale_fill_bakeoff(   palette = \"showstopper\",   discrete = TRUE,   direction = 1,   ... )"},{"path":"https://bakeoff.netlify.app/reference/scale_bakeoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color scale constructor for bakeoff colors — scale_bakeoff","text":"palette Character name palette bakeoff_palette_names. discrete Boolean indicating whether color aesthetic discrete . direction Either 1 -1. -1, palette reversed. ... Additional arguments passed ggplot2::discrete_scale() ggplot2::scale_color_gradientn(), used respectively discrete TRUE FALSE.","code":""},{"path":"https://bakeoff.netlify.app/reference/scale_bakeoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color scale constructor for bakeoff colors — scale_bakeoff","text":"","code":"if (require('ggplot2')) {    ggplot(ratings, aes(x = episode, y = viewers_7day, group = series, color = as.factor(series))) +     geom_line(lwd = 3) +     theme_minimal() +     scale_color_bakeoff(\"finale\", guide = \"none\") }"},{"path":"https://bakeoff.netlify.app/reference/seasons_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Data about each season aired in the US (raw) — seasons_raw","title":"Data about each season aired in the US (raw) — seasons_raw","text":"Seasons airdates episodes aired US 'Great British Baking Show'.","code":""},{"path":"https://bakeoff.netlify.app/reference/seasons_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data about each season aired in the US (raw) — seasons_raw","text":"","code":"seasons_raw"},{"path":"https://bakeoff.netlify.app/reference/seasons_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data about each season aired in the US (raw) — seasons_raw","text":"data frame 8 rows representing individual series 11 variables: series integer denoting UK series (1-8) episode integer denoting total number episodes within series us_season integer denoting US season (1-5) us_airdate date denoting original airdate episode US, according pbs.org","code":""},{"path":"https://bakeoff.netlify.app/reference/seasons_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data about each season aired in the US (raw) — seasons_raw","text":"US airdates manually recorded https://www.pbs.org/food/shows/great-british-baking-show/","code":""},{"path":"https://bakeoff.netlify.app/reference/seasons_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data about each season aired in the US (raw) — seasons_raw","text":"","code":"if (require('tibble')) {   seasons_raw  } #> # A tibble: 50 × 4 #>    series episode us_season us_airdate #>     <int>   <int>     <int> <date>     #>  1      4       1         1 2014-12-28 #>  2      4       2         1 2015-01-04 #>  3      4       3         1 2015-01-11 #>  4      4       4         1 2015-01-18 #>  5      4       5         1 2015-01-25 #>  6      4       6         1 2015-02-01 #>  7      4       7         1 2015-02-08 #>  8      4       8         1 2015-02-15 #>  9      4       9         1 2015-02-22 #> 10      4      10         1 2015-03-01 #> # … with 40 more rows head(seasons_raw) #> # A tibble: 6 × 4 #>   series episode us_season us_airdate #>    <int>   <int>     <int> <date>     #> 1      4       1         1 2014-12-28 #> 2      4       2         1 2015-01-04 #> 3      4       3         1 2015-01-11 #> 4      4       4         1 2015-01-18 #> 5      4       5         1 2015-01-25 #> 6      4       6         1 2015-02-01"},{"path":"https://bakeoff.netlify.app/reference/series_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Data about each series aired in the UK (raw) — series_raw","title":"Data about each series aired in the UK (raw) — series_raw","text":"Seasons airdates episodes aired UK 'Great British Bake '.","code":""},{"path":"https://bakeoff.netlify.app/reference/series_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data about each series aired in the UK (raw) — series_raw","text":"","code":"series_raw"},{"path":"https://bakeoff.netlify.app/reference/series_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data about each series aired in the UK (raw) — series_raw","text":"data frame 10 rows representing individual series 11 variables: series factor denoting UK series (1-10). episodes integer denoting total number episodes within series. premiere date denoting original airdate series premiere episode UK. finale date denoting original airdate series finale episode UK. winner character string denoting name series winner. avg_uk_viewers Average UK viewers millions. Also see ratings. day_of_week character string denoting weekday series' episodes aired UK. timeslot time day series' episodes aired UK (24-hour clock). channel character string denoting channel series aired : one BBC One, BBC Two, Channel 4. runner_up_1 character string denoting name one bakers series runner-. number meaningful. runner_up_2 character string denoting name one bakers series runner-. number meaningful.","code":""},{"path":"https://bakeoff.netlify.app/reference/series_raw.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data about each series aired in the UK (raw) — series_raw","text":"See https://en.wikipedia.org/wiki/The_Great_British_Bake_Off#Series_overview","code":""},{"path":"https://bakeoff.netlify.app/reference/series_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data about each series aired in the UK (raw) — series_raw","text":"","code":"if (require('tibble')) {   series_raw  } #> # A tibble: 10 × 11 #>    series episodes premiere   finale     winner       avg_uk_viewers day_of_week #>    <fct>     <int> <date>     <date>     <chr>                 <dbl> <chr>       #>  1 1             6 2010-08-17 2010-09-21 Edd Kimber             2.77 Tuesday     #>  2 2             8 2011-08-14 2011-10-04 Joanne Whea…           4    Tuesday     #>  3 3            10 2012-08-14 2012-10-16 John Whaite            5    Tuesday     #>  4 4            10 2013-08-20 2013-10-22 Frances Qui…           7.35 Tuesday     #>  5 5            10 2014-08-06 2014-10-08 Nancy Birtw…          10.0  Wednesday   #>  6 6            10 2015-08-05 2015-10-07 Nadiya Huss…          12.5  Wednesday   #>  7 7            10 2016-08-24 2016-10-26 Candice Bro…          13.8  Wednesday   #>  8 8            10 2017-08-29 2017-10-31 Sophie Faldo           9.29 Tuesday     #>  9 9            10 2018-08-28 2018-10-30 Rahul Mandal           9.3  Tuesday     #> 10 10           10 2019-08-27 2019-10-29 David Ather…           9.24 Tuesday     #> # … with 4 more variables: timeslot <chr>, channel <chr>, runner_up_1 <chr>, #> #   runner_up_2 <chr> head(series_raw) #> # A tibble: 6 × 11 #>   series episodes premiere   finale     winner        avg_uk_viewers day_of_week #>   <fct>     <int> <date>     <date>     <chr>                  <dbl> <chr>       #> 1 1             6 2010-08-17 2010-09-21 Edd Kimber              2.77 Tuesday     #> 2 2             8 2011-08-14 2011-10-04 Joanne Wheat…           4    Tuesday     #> 3 3            10 2012-08-14 2012-10-16 John Whaite             5    Tuesday     #> 4 4            10 2013-08-20 2013-10-22 Frances Quinn           7.35 Tuesday     #> 5 5            10 2014-08-06 2014-10-08 Nancy Birtwh…          10.0  Wednesday   #> 6 6            10 2015-08-05 2015-10-07 Nadiya Hussa…          12.5  Wednesday   #> # … with 4 more variables: timeslot <chr>, channel <chr>, runner_up_1 <chr>, #> #   runner_up_2 <chr>"},{"path":"https://bakeoff.netlify.app/reference/spice_test_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Spice Test — spice_test_wide","title":"Spice Test — spice_test_wide","text":"Results knowledge test Junior Bake (Series 2, Episode 14).","code":""},{"path":"https://bakeoff.netlify.app/reference/spice_test_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spice Test — spice_test_wide","text":"","code":"spice_test_wide"},{"path":"https://bakeoff.netlify.app/reference/spice_test_wide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spice Test — spice_test_wide","text":"data frame 4 rows representing baker results spice-based knowledge test 7 variables: baker character string given name nickname. guess_1,guess_2,guess_3 different guesses (order) mystery spice . correct_1,correct_2,correct_3 integer whether guess correct (1) wrong (0).","code":""},{"path":"https://bakeoff.netlify.app/reference/spice_test_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spice Test — spice_test_wide","text":"","code":"if (require('tibble')) {   spice_test_wide  } #> # A tibble: 4 × 7 #>   baker  guess_1  guess_2                  guess_3 correct_1 correct_2 correct_3 #>   <chr>  <chr>    <chr>                    <chr>       <dbl>     <dbl>     <dbl> #> 1 Emma   Cinnamon Cloves                   Nutmeg          1         0         1 #> 2 Harry  Cinnamon Cardamom                 Nutmeg          1         1         1 #> 3 Ruby   Cinnamon Cumin                    Nutmeg          1         0         1 #> 4 Zainab Cardamom Couldn't remember the n… Cinnam…         0         0         0 head(spice_test_wide) #> # A tibble: 4 × 7 #>   baker  guess_1  guess_2                  guess_3 correct_1 correct_2 correct_3 #>   <chr>  <chr>    <chr>                    <chr>       <dbl>     <dbl>     <dbl> #> 1 Emma   Cinnamon Cloves                   Nutmeg          1         0         1 #> 2 Harry  Cinnamon Cardamom                 Nutmeg          1         1         1 #> 3 Ruby   Cinnamon Cumin                    Nutmeg          1         0         1 #> 4 Zainab Cardamom Couldn't remember the n… Cinnam…         0         0         0"},{"path":"https://bakeoff.netlify.app/news/index.html","id":"bakeoff-0109000","dir":"Changelog","previous_headings":"","what":"bakeoff 0.1.0.9000","title":"bakeoff 0.1.0.9000","text":"Added NEWS.md file track changes package. Initial package set-using usethis.","code":""}]
